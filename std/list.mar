extern {
    fn push_list<T>(list: [T], value: T)
    fn pop_list<T>(list: [T]): Option<T>
    fn len_list<T>(list: [T]): int
}


impl<T> [T] {
    fn push(self, value: T) {
        push_list(self, value)
    }


    fn pop(self): Option<T> {
        pop_list(self)
    }


    fn len(self): int { len_list(self) }


    fn iter(self): std::iter::Iter<T> {
        var index = Box::new(0);
        std::iter::Iter {
            next: || {
                if index.value < self.len() {
                    index.value += 1;
                    some(self[index.value-1])
                } else {
                    none()
                }
            }
        }
    }
}

